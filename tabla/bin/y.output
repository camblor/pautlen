Terminals unused in grammar

   TOK_CONSTANTE_REAL
   TOK_ERROR


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias '}'

    2 escritura1: %empty

    3 escritura2: %empty

    4 declaraciones: declaracion
    5              | declaracion declaraciones

    6 declaracion: clase identificadores ';'

    7 clase: clase_escalar
    8      | clase_vector

    9 clase_escalar: tipo

   10 tipo: TOK_INT
   11     | TOK_BOOLEAN

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   13 identificadores: identificador
   14                | identificador ',' identificadores

   15 funciones: funcion funciones
   16          | %empty

   17 funcion: fn_declaration sentencias '}'

   18 fn_declaration: fn_name '(' parametros_funcion ')' '{' declaraciones_funcion

   19 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR

   20 parametros_funcion: parametro_funcion resto_parametros_funcion
   21                   | %empty

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   23                         | %empty

   24 parametro_funcion: tipo TOK_IDENTIFICADOR

   25 declaraciones_funcion: declaraciones
   26                      | %empty

   27 sentencias: sentencia
   28           | sentencia sentencias

   29 sentencia: sentencia_simple ';'
   30          | bloque

   31 sentencia_simple: asignacion
   32                 | lectura
   33                 | escritura
   34                 | retorno_funcion

   35 bloque: condicional
   36       | bucle

   37 asignacion: TOK_IDENTIFICADOR '=' exp
   38           | elemento_vector '=' exp

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   40 condicional: if_exp_sentencias
   41            | if_exp_sentencias TOK_ELSE '{' sentencias '}'

   42 if_exp_sentencias: if_exp sentencias '}'

   43 if_exp: TOK_IF '(' exp ')' '{'

   44 bucle: while_exp_sentencias

   45 while_exp_sentencias: while_exp sentencias '}'

   46 while_exp: while '(' exp ')' '{'

   47 while: TOK_WHILE

   48 lectura: TOK_SCANF TOK_IDENTIFICADOR

   49 escritura: TOK_PRINTF exp

   50 retorno_funcion: TOK_RETURN exp

   51 exp: exp '+' exp
   52    | exp '-' exp
   53    | exp '/' exp
   54    | exp '*' exp
   55    | '-' exp
   56    | exp TOK_AND exp
   57    | exp TOK_OR exp
   58    | '!' exp
   59    | TOK_IDENTIFICADOR
   60    | constante
   61    | '(' exp ')'
   62    | '(' comparacion ')'
   63    | elemento_vector
   64    | TOK_IDENTIFICADOR '(' lista_expresiones ')'

   65 lista_expresiones: exp resto_lista_expresiones
   66                  | %empty

   67 resto_lista_expresiones: ',' exp resto_lista_expresiones
   68                        | %empty

   69 comparacion: exp TOK_IGUAL exp
   70            | exp TOK_DISTINTO exp
   71            | exp TOK_MENORIGUAL exp
   72            | exp TOK_MAYORIGUAL exp
   73            | exp '<' exp
   74            | exp '>' exp

   75 constante: constante_logica
   76          | constante_entera

   77 constante_logica: TOK_TRUE
   78                 | TOK_FALSE

   79 constante_entera: TOK_CONSTANTE_ENTERA

   80 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 58
'(' (40) 18 43 46 61 62 64
')' (41) 18 43 46 61 62 64
'*' (42) 54
'+' (43) 51
',' (44) 14 67
'-' (45) 52 55
'/' (47) 53
';' (59) 6 22 29
'<' (60) 73
'=' (61) 37 38
'>' (62) 74
'[' (91) 12 39
']' (93) 12 39
'{' (123) 1 18 41 43 46
'}' (125) 1 17 41 42 45
error (256)
TOK_IDENTIFICADOR (258) 19 24 37 39 48 59 64 80
TOK_CONSTANTE_REAL (259)
TOK_CONSTANTE_ENTERA (260) 12 79
TOK_MAIN (261) 1
TOK_RETURN (262) 50
TOK_ARRAY (263) 12
TOK_INT (264) 10
TOK_BOOLEAN (265) 11
TOK_SCANF (266) 48
TOK_PRINTF (267) 49
TOK_IF (268) 43
TOK_ELSE (269) 41
TOK_WHILE (270) 47
TOK_OR (271) 57
TOK_AND (272) 56
TOK_DISTINTO (273) 70
TOK_IGUAL (274) 69
TOK_MENORIGUAL (275) 71
TOK_MAYORIGUAL (276) 72
TOK_FUNCTION (277) 19
TOK_TRUE (278) 77
TOK_FALSE (279) 78
TOK_ERROR (280)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
programa (43)
    on left: 1, on right: 0
escritura1 (44)
    on left: 2, on right: 1
escritura2 (45)
    on left: 3, on right: 1
declaraciones (46)
    on left: 4 5, on right: 1 5 25
declaracion (47)
    on left: 6, on right: 4 5
clase (48)
    on left: 7 8, on right: 6
clase_escalar (49)
    on left: 9, on right: 7
tipo (50)
    on left: 10 11, on right: 9 12 19 24
clase_vector (51)
    on left: 12, on right: 8
identificadores (52)
    on left: 13 14, on right: 6 14
funciones (53)
    on left: 15 16, on right: 1 15
funcion (54)
    on left: 17, on right: 15
fn_declaration (55)
    on left: 18, on right: 17
fn_name (56)
    on left: 19, on right: 18
parametros_funcion (57)
    on left: 20 21, on right: 18
resto_parametros_funcion (58)
    on left: 22 23, on right: 20 22
parametro_funcion (59)
    on left: 24, on right: 20 22
declaraciones_funcion (60)
    on left: 25 26, on right: 18
sentencias (61)
    on left: 27 28, on right: 1 17 28 41 42 45
sentencia (62)
    on left: 29 30, on right: 27 28
sentencia_simple (63)
    on left: 31 32 33 34, on right: 29
bloque (64)
    on left: 35 36, on right: 30
asignacion (65)
    on left: 37 38, on right: 31
elemento_vector (66)
    on left: 39, on right: 38 63
condicional (67)
    on left: 40 41, on right: 35
if_exp_sentencias (68)
    on left: 42, on right: 40 41
if_exp (69)
    on left: 43, on right: 42
bucle (70)
    on left: 44, on right: 36
while_exp_sentencias (71)
    on left: 45, on right: 44
while_exp (72)
    on left: 46, on right: 45
while (73)
    on left: 47, on right: 46
lectura (74)
    on left: 48, on right: 32
escritura (75)
    on left: 49, on right: 33
retorno_funcion (76)
    on left: 50, on right: 34
exp (77)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 37
    38 39 43 46 49 50 51 52 53 54 55 56 57 58 61 65 67 69 70 71 72
    73 74
lista_expresiones (78)
    on left: 65 66, on right: 64
resto_lista_expresiones (79)
    on left: 67 68, on right: 65 67
comparacion (80)
    on left: 69 70 71 72 73 74, on right: 62
constante (81)
    on left: 75 76, on right: 60
constante_logica (82)
    on left: 77 78, on right: 75
constante_entera (83)
    on left: 79, on right: 76
identificador (84)
    on left: 80, on right: 13 14


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' escritura1 declaraciones funciones escritura2 sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . escritura1 declaraciones funciones escritura2 sentencias '}'

    $default  reduce using rule 2 (escritura1)

    escritura1  go to state 5


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    1 programa: TOK_MAIN '{' escritura1 . declaraciones funciones escritura2 sentencias '}'

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    declaraciones  go to state 9
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 6

   12 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 15


State 7

   10 tipo: TOK_INT .

    $default  reduce using rule 10 (tipo)


State 8

   11 tipo: TOK_BOOLEAN .

    $default  reduce using rule 11 (tipo)


State 9

    1 programa: TOK_MAIN '{' escritura1 declaraciones . funciones escritura2 sentencias '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 16 (funciones)

    funciones       go to state 17
    funcion         go to state 18
    fn_declaration  go to state 19
    fn_name         go to state 20


State 10

    4 declaraciones: declaracion .
    5              | declaracion . declaraciones

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 4 (declaraciones)

    declaraciones  go to state 21
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 11

    6 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 22

    identificadores  go to state 23
    identificador    go to state 24


State 12

    7 clase: clase_escalar .

    $default  reduce using rule 7 (clase)


State 13

    9 clase_escalar: tipo .

    $default  reduce using rule 9 (clase_escalar)


State 14

    8 clase: clase_vector .

    $default  reduce using rule 8 (clase)


State 15

   12 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  shift, and go to state 25


State 16

   19 fn_name: TOK_FUNCTION . tipo TOK_IDENTIFICADOR

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 26


State 17

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones . escritura2 sentencias '}'

    $default  reduce using rule 3 (escritura2)

    escritura2  go to state 27


State 18

   15 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 16 (funciones)

    funciones       go to state 28
    funcion         go to state 18
    fn_declaration  go to state 19
    fn_name         go to state 20


State 19

   17 funcion: fn_declaration . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    sentencias            go to state 35
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 20

   18 fn_declaration: fn_name . '(' parametros_funcion ')' '{' declaraciones_funcion

    '('  shift, and go to state 51


State 21

    5 declaraciones: declaracion declaraciones .

    $default  reduce using rule 5 (declaraciones)


State 22

   80 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 80 (identificador)


State 23

    6 declaracion: clase identificadores . ';'

    ';'  shift, and go to state 52


State 24

   13 identificadores: identificador .
   14                | identificador . ',' identificadores

    ','  shift, and go to state 53

    $default  reduce using rule 13 (identificadores)


State 25

   12 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 54


State 26

   19 fn_name: TOK_FUNCTION tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 55


State 27

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    sentencias            go to state 56
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 28

   15 funciones: funcion funciones .

    $default  reduce using rule 15 (funciones)


State 29

   37 asignacion: TOK_IDENTIFICADOR . '=' exp
   39 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'

    '['  shift, and go to state 57
    '='  shift, and go to state 58


State 30

   50 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 67
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 31

   48 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 71


State 32

   49 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 72
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 33

   43 if_exp: TOK_IF . '(' exp ')' '{'

    '('  shift, and go to state 73


State 34

   47 while: TOK_WHILE .

    $default  reduce using rule 47 (while)


State 35

   17 funcion: fn_declaration sentencias . '}'

    '}'  shift, and go to state 74


State 36

   27 sentencias: sentencia .
   28           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    $default  reduce using rule 27 (sentencias)

    sentencias            go to state 75
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 37

   29 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 76


State 38

   30 sentencia: bloque .

    $default  reduce using rule 30 (sentencia)


State 39

   31 sentencia_simple: asignacion .

    $default  reduce using rule 31 (sentencia_simple)


State 40

   38 asignacion: elemento_vector . '=' exp

    '='  shift, and go to state 77


State 41

   35 bloque: condicional .

    $default  reduce using rule 35 (bloque)


State 42

   40 condicional: if_exp_sentencias .
   41            | if_exp_sentencias . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 78

    $default  reduce using rule 40 (condicional)


State 43

   42 if_exp_sentencias: if_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    sentencias            go to state 79
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 44

   36 bloque: bucle .

    $default  reduce using rule 36 (bloque)


State 45

   44 bucle: while_exp_sentencias .

    $default  reduce using rule 44 (bucle)


State 46

   45 while_exp_sentencias: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    sentencias            go to state 80
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 47

   46 while_exp: while . '(' exp ')' '{'

    '('  shift, and go to state 81


State 48

   32 sentencia_simple: lectura .

    $default  reduce using rule 32 (sentencia_simple)


State 49

   33 sentencia_simple: escritura .

    $default  reduce using rule 33 (sentencia_simple)


State 50

   34 sentencia_simple: retorno_funcion .

    $default  reduce using rule 34 (sentencia_simple)


State 51

   18 fn_declaration: fn_name '(' . parametros_funcion ')' '{' declaraciones_funcion

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 21 (parametros_funcion)

    tipo                go to state 82
    parametros_funcion  go to state 83
    parametro_funcion   go to state 84


State 52

    6 declaracion: clase identificadores ';' .

    $default  reduce using rule 6 (declaracion)


State 53

   14 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 22

    identificadores  go to state 85
    identificador    go to state 24


State 54

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  shift, and go to state 86


State 55

   19 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 19 (fn_name)


State 56

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias . '}'

    '}'  shift, and go to state 87


State 57

   39 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 88
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 58

   37 asignacion: TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 89
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 59

   39 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   59 exp: TOK_IDENTIFICADOR .
   64    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '['  shift, and go to state 57
    '('  shift, and go to state 90

    $default  reduce using rule 59 (exp)


State 60

   79 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 79 (constante_entera)


State 61

   77 constante_logica: TOK_TRUE .

    $default  reduce using rule 77 (constante_logica)


State 62

   78 constante_logica: TOK_FALSE .

    $default  reduce using rule 78 (constante_logica)


State 63

   55 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 91
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 64

   58 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 92
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 65

   61 exp: '(' . exp ')'
   62    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 93
    comparacion       go to state 94
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 66

   63 exp: elemento_vector .

    $default  reduce using rule 63 (exp)


State 67

   50 retorno_funcion: TOK_RETURN exp .
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 50 (retorno_funcion)


State 68

   60 exp: constante .

    $default  reduce using rule 60 (exp)


State 69

   75 constante: constante_logica .

    $default  reduce using rule 75 (constante)


State 70

   76 constante: constante_entera .

    $default  reduce using rule 76 (constante)


State 71

   48 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce using rule 48 (lectura)


State 72

   49 escritura: TOK_PRINTF exp .
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 49 (escritura)


State 73

   43 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 101
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 74

   17 funcion: fn_declaration sentencias '}' .

    $default  reduce using rule 17 (funcion)


State 75

   28 sentencias: sentencia sentencias .

    $default  reduce using rule 28 (sentencias)


State 76

   29 sentencia: sentencia_simple ';' .

    $default  reduce using rule 29 (sentencia)


State 77

   38 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 102
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 78

   41 condicional: if_exp_sentencias TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 103


State 79

   42 if_exp_sentencias: if_exp sentencias . '}'

    '}'  shift, and go to state 104


State 80

   45 while_exp_sentencias: while_exp sentencias . '}'

    '}'  shift, and go to state 105


State 81

   46 while_exp: while '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 106
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 82

   24 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 107


State 83

   18 fn_declaration: fn_name '(' parametros_funcion . ')' '{' declaraciones_funcion

    ')'  shift, and go to state 108


State 84

   20 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 109

    $default  reduce using rule 23 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 110


State 85

   14 identificadores: identificador ',' identificadores .

    $default  reduce using rule 14 (identificadores)


State 86

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 12 (clase_vector)


State 87

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias '}' .

    $default  reduce using rule 1 (programa)


State 88

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100
    ']'      shift, and go to state 111


State 89

   37 asignacion: TOK_IDENTIFICADOR '=' exp .
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 37 (asignacion)


State 90

   64 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    $default  reduce using rule 66 (lista_expresiones)

    elemento_vector    go to state 66
    exp                go to state 112
    lista_expresiones  go to state 113
    constante          go to state 68
    constante_logica   go to state 69
    constante_entera   go to state 70


State 91

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   55    | '-' exp .
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96

    $default  reduce using rule 55 (exp)


State 92

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   58    | '!' exp .

    $default  reduce using rule 58 (exp)


State 93

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   61    | '(' exp . ')'
   69 comparacion: exp . TOK_IGUAL exp
   70            | exp . TOK_DISTINTO exp
   71            | exp . TOK_MENORIGUAL exp
   72            | exp . TOK_MAYORIGUAL exp
   73            | exp . '<' exp
   74            | exp . '>' exp

    TOK_OR          shift, and go to state 95
    TOK_AND         shift, and go to state 96
    TOK_DISTINTO    shift, and go to state 114
    TOK_IGUAL       shift, and go to state 115
    TOK_MENORIGUAL  shift, and go to state 116
    TOK_MAYORIGUAL  shift, and go to state 117
    '+'             shift, and go to state 97
    '-'             shift, and go to state 98
    '*'             shift, and go to state 99
    '/'             shift, and go to state 100
    '<'             shift, and go to state 118
    '>'             shift, and go to state 119
    ')'             shift, and go to state 120


State 94

   62 exp: '(' comparacion . ')'

    ')'  shift, and go to state 121


State 95

   57 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 122
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 96

   56 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 123
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 97

   51 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 124
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 98

   52 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 125
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 99

   54 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 126
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 100

   53 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 127
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 101

   43 if_exp: TOK_IF '(' exp . ')' '{'
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100
    ')'      shift, and go to state 128


State 102

   38 asignacion: elemento_vector '=' exp .
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 38 (asignacion)


State 103

   41 condicional: if_exp_sentencias TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 29
    TOK_RETURN         shift, and go to state 30
    TOK_SCANF          shift, and go to state 31
    TOK_PRINTF         shift, and go to state 32
    TOK_IF             shift, and go to state 33
    TOK_WHILE          shift, and go to state 34

    sentencias            go to state 129
    sentencia             go to state 36
    sentencia_simple      go to state 37
    bloque                go to state 38
    asignacion            go to state 39
    elemento_vector       go to state 40
    condicional           go to state 41
    if_exp_sentencias     go to state 42
    if_exp                go to state 43
    bucle                 go to state 44
    while_exp_sentencias  go to state 45
    while_exp             go to state 46
    while                 go to state 47
    lectura               go to state 48
    escritura             go to state 49
    retorno_funcion       go to state 50


State 104

   42 if_exp_sentencias: if_exp sentencias '}' .

    $default  reduce using rule 42 (if_exp_sentencias)


State 105

   45 while_exp_sentencias: while_exp sentencias '}' .

    $default  reduce using rule 45 (while_exp_sentencias)


State 106

   46 while_exp: while '(' exp . ')' '{'
   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100
    ')'      shift, and go to state 130


State 107

   24 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 24 (parametro_funcion)


State 108

   18 fn_declaration: fn_name '(' parametros_funcion ')' . '{' declaraciones_funcion

    '{'  shift, and go to state 131


State 109

   22 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo               go to state 82
    parametro_funcion  go to state 132


State 110

   20 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 20 (parametros_funcion)


State 111

   39 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 39 (elemento_vector)


State 112

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   65 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100
    ','      shift, and go to state 133

    $default  reduce using rule 68 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 134


State 113

   64 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 135


State 114

   70 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 136
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 115

   69 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 137
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 116

   71 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 138
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 117

   72 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 139
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 118

   73 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 140
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 119

   74 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 141
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 120

   61 exp: '(' exp ')' .

    $default  reduce using rule 61 (exp)


State 121

   62 exp: '(' comparacion ')' .

    $default  reduce using rule 62 (exp)


State 122

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   57    | exp TOK_OR exp .

    $default  reduce using rule 57 (exp)


State 123

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   56    | exp TOK_AND exp .
   57    | exp . TOK_OR exp

    $default  reduce using rule 56 (exp)


State 124

   51 exp: exp . '+' exp
   51    | exp '+' exp .
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96

    $default  reduce using rule 51 (exp)


State 125

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   52    | exp '-' exp .
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96

    $default  reduce using rule 52 (exp)


State 126

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   54    | exp '*' exp .
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96

    $default  reduce using rule 54 (exp)


State 127

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   53    | exp '/' exp .
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96

    $default  reduce using rule 53 (exp)


State 128

   43 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  shift, and go to state 142


State 129

   41 condicional: if_exp_sentencias TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 143


State 130

   46 while_exp: while '(' exp ')' . '{'

    '{'  shift, and go to state 144


State 131

   18 fn_declaration: fn_name '(' parametros_funcion ')' '{' . declaraciones_funcion

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 26 (declaraciones_funcion)

    declaraciones          go to state 145
    declaracion            go to state 10
    clase                  go to state 11
    clase_escalar          go to state 12
    tipo                   go to state 13
    clase_vector           go to state 14
    declaraciones_funcion  go to state 146


State 132

   22 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 109

    $default  reduce using rule 23 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 147


State 133

   67 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 59
    TOK_CONSTANTE_ENTERA  shift, and go to state 60
    TOK_TRUE              shift, and go to state 61
    TOK_FALSE             shift, and go to state 62
    '-'                   shift, and go to state 63
    '!'                   shift, and go to state 64
    '('                   shift, and go to state 65

    elemento_vector   go to state 66
    exp               go to state 148
    constante         go to state 68
    constante_logica  go to state 69
    constante_entera  go to state 70


State 134

   65 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 65 (lista_expresiones)


State 135

   64 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 64 (exp)


State 136

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   70 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 70 (comparacion)


State 137

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   69 comparacion: exp TOK_IGUAL exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 69 (comparacion)


State 138

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   71 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 71 (comparacion)


State 139

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   72 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 72 (comparacion)


State 140

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   73 comparacion: exp '<' exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 73 (comparacion)


State 141

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   74 comparacion: exp '>' exp .

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100

    $default  reduce using rule 74 (comparacion)


State 142

   43 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce using rule 43 (if_exp)


State 143

   41 condicional: if_exp_sentencias TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 41 (condicional)


State 144

   46 while_exp: while '(' exp ')' '{' .

    $default  reduce using rule 46 (while_exp)


State 145

   25 declaraciones_funcion: declaraciones .

    $default  reduce using rule 25 (declaraciones_funcion)


State 146

   18 fn_declaration: fn_name '(' parametros_funcion ')' '{' declaraciones_funcion .

    $default  reduce using rule 18 (fn_declaration)


State 147

   22 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 22 (resto_parametros_funcion)


State 148

   51 exp: exp . '+' exp
   52    | exp . '-' exp
   53    | exp . '/' exp
   54    | exp . '*' exp
   56    | exp . TOK_AND exp
   57    | exp . TOK_OR exp
   67 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 95
    TOK_AND  shift, and go to state 96
    '+'      shift, and go to state 97
    '-'      shift, and go to state 98
    '*'      shift, and go to state 99
    '/'      shift, and go to state 100
    ','      shift, and go to state 133

    $default  reduce using rule 68 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 149


State 149

   67 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 67 (resto_lista_expresiones)

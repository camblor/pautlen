Terminals unused in grammar

   TOK_CONSTANTE_REAL
   TOK_ERROR


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 funciones escritura3 sentencias '}'

    2 escritura1: %empty

    3 escritura2: %empty

    4 escritura3: %empty

    5 declaraciones: declaracion
    6              | declaracion declaraciones

    7 declaracion: clase identificadores ';'

    8 clase: clase_escalar
    9      | clase_vector

   10 clase_escalar: tipo

   11 tipo: TOK_INT
   12     | TOK_BOOLEAN

   13 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   14 identificadores: identificador
   15                | identificador ',' identificadores

   16 funciones: funcion funciones
   17          | %empty

   18 funcion: fn_declaration sentencias '}'

   19 fn_declaration: fn_name '(' parametros_funcion ')' '{' declaraciones_funcion

   20 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR

   21 parametros_funcion: parametro_funcion resto_parametros_funcion
   22                   | %empty

   23 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   24                         | %empty

   25 parametro_funcion: tipo idpf

   26 idpf: TOK_IDENTIFICADOR

   27 declaraciones_funcion: declaraciones
   28                      | %empty

   29 sentencias: sentencia
   30           | sentencia sentencias

   31 sentencia: sentencia_simple ';'
   32          | bloque

   33 sentencia_simple: asignacion
   34                 | lectura
   35                 | escritura
   36                 | retorno_funcion

   37 bloque: condicional
   38       | bucle

   39 asignacion: TOK_IDENTIFICADOR '=' exp
   40           | elemento_vector '=' exp

   41 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   42 condicional: if_exp_sentencias
   43            | if_exp_sentencias TOK_ELSE '{' sentencias '}'

   44 if_exp_sentencias: if_exp sentencias '}'

   45 if_exp: TOK_IF '(' exp ')' '{'

   46 bucle: while_exp_sentencias

   47 while_exp_sentencias: while_exp sentencias '}'

   48 while_exp: while '(' exp ')' '{'

   49 while: TOK_WHILE

   50 lectura: TOK_SCANF TOK_IDENTIFICADOR

   51 escritura: TOK_PRINTF exp

   52 retorno_funcion: TOK_RETURN exp

   53 exp: exp '+' exp
   54    | exp '-' exp
   55    | exp '/' exp
   56    | exp '*' exp
   57    | '-' exp
   58    | exp TOK_AND exp
   59    | exp TOK_OR exp
   60    | '!' exp
   61    | TOK_IDENTIFICADOR
   62    | constante
   63    | '(' exp ')'
   64    | '(' comparacion ')'
   65    | elemento_vector
   66    | TOK_IDENTIFICADOR '(' lista_expresiones ')'

   67 lista_expresiones: exp resto_lista_expresiones
   68                  | %empty

   69 resto_lista_expresiones: ',' exp resto_lista_expresiones
   70                        | %empty

   71 comparacion: exp TOK_IGUAL exp
   72            | exp TOK_DISTINTO exp
   73            | exp TOK_MENORIGUAL exp
   74            | exp TOK_MAYORIGUAL exp
   75            | exp '<' exp
   76            | exp '>' exp

   77 constante: constante_logica
   78          | constante_entera

   79 constante_logica: TOK_TRUE
   80                 | TOK_FALSE

   81 constante_entera: TOK_CONSTANTE_ENTERA

   82 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 60
'(' (40) 19 45 48 63 64 66
')' (41) 19 45 48 63 64 66
'*' (42) 56
'+' (43) 53
',' (44) 15 69
'-' (45) 54 57
'/' (47) 55
';' (59) 7 23 31
'<' (60) 75
'=' (61) 39 40
'>' (62) 76
'[' (91) 13 41
']' (93) 13 41
'{' (123) 1 19 43 45 48
'}' (125) 1 18 43 44 47
error (256)
TOK_IDENTIFICADOR (258) 20 26 39 41 50 61 66 82
TOK_CONSTANTE_REAL (259)
TOK_CONSTANTE_ENTERA (260) 13 81
TOK_MAIN (261) 1
TOK_RETURN (262) 52
TOK_ARRAY (263) 13
TOK_INT (264) 11
TOK_BOOLEAN (265) 12
TOK_SCANF (266) 50
TOK_PRINTF (267) 51
TOK_IF (268) 45
TOK_ELSE (269) 43
TOK_WHILE (270) 49
TOK_OR (271) 59
TOK_AND (272) 58
TOK_DISTINTO (273) 72
TOK_IGUAL (274) 71
TOK_MENORIGUAL (275) 73
TOK_MAYORIGUAL (276) 74
TOK_FUNCTION (277) 20
TOK_TRUE (278) 79
TOK_FALSE (279) 80
TOK_ERROR (280)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
programa (43)
    on left: 1, on right: 0
escritura1 (44)
    on left: 2, on right: 1
escritura2 (45)
    on left: 3, on right: 1
escritura3 (46)
    on left: 4, on right: 1
declaraciones (47)
    on left: 5 6, on right: 1 6 27
declaracion (48)
    on left: 7, on right: 5 6
clase (49)
    on left: 8 9, on right: 7
clase_escalar (50)
    on left: 10, on right: 8
tipo (51)
    on left: 11 12, on right: 10 13 20 25
clase_vector (52)
    on left: 13, on right: 9
identificadores (53)
    on left: 14 15, on right: 7 15
funciones (54)
    on left: 16 17, on right: 1 16
funcion (55)
    on left: 18, on right: 16
fn_declaration (56)
    on left: 19, on right: 18
fn_name (57)
    on left: 20, on right: 19
parametros_funcion (58)
    on left: 21 22, on right: 19
resto_parametros_funcion (59)
    on left: 23 24, on right: 21 23
parametro_funcion (60)
    on left: 25, on right: 21 23
idpf (61)
    on left: 26, on right: 25
declaraciones_funcion (62)
    on left: 27 28, on right: 19
sentencias (63)
    on left: 29 30, on right: 1 18 30 43 44 47
sentencia (64)
    on left: 31 32, on right: 29 30
sentencia_simple (65)
    on left: 33 34 35 36, on right: 31
bloque (66)
    on left: 37 38, on right: 32
asignacion (67)
    on left: 39 40, on right: 33
elemento_vector (68)
    on left: 41, on right: 40 65
condicional (69)
    on left: 42 43, on right: 37
if_exp_sentencias (70)
    on left: 44, on right: 42 43
if_exp (71)
    on left: 45, on right: 44
bucle (72)
    on left: 46, on right: 38
while_exp_sentencias (73)
    on left: 47, on right: 46
while_exp (74)
    on left: 48, on right: 47
while (75)
    on left: 49, on right: 48
lectura (76)
    on left: 50, on right: 34
escritura (77)
    on left: 51, on right: 35
retorno_funcion (78)
    on left: 52, on right: 36
exp (79)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66, on right: 39
    40 41 45 48 51 52 53 54 55 56 57 58 59 60 63 67 69 71 72 73 74
    75 76
lista_expresiones (80)
    on left: 67 68, on right: 66
resto_lista_expresiones (81)
    on left: 69 70, on right: 67 69
comparacion (82)
    on left: 71 72 73 74 75 76, on right: 64
constante (83)
    on left: 77 78, on right: 62
constante_logica (84)
    on left: 79 80, on right: 77
constante_entera (85)
    on left: 81, on right: 78
identificador (86)
    on left: 82, on right: 14 15


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' escritura1 declaraciones escritura2 funciones escritura3 sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . escritura1 declaraciones escritura2 funciones escritura3 sentencias '}'

    $default  reduce using rule 2 (escritura1)

    escritura1  go to state 5


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    1 programa: TOK_MAIN '{' escritura1 . declaraciones escritura2 funciones escritura3 sentencias '}'

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    declaraciones  go to state 9
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 6

   13 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 15


State 7

   11 tipo: TOK_INT .

    $default  reduce using rule 11 (tipo)


State 8

   12 tipo: TOK_BOOLEAN .

    $default  reduce using rule 12 (tipo)


State 9

    1 programa: TOK_MAIN '{' escritura1 declaraciones . escritura2 funciones escritura3 sentencias '}'

    $default  reduce using rule 3 (escritura2)

    escritura2  go to state 16


State 10

    5 declaraciones: declaracion .
    6              | declaracion . declaraciones

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 5 (declaraciones)

    declaraciones  go to state 17
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 11

    7 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores  go to state 19
    identificador    go to state 20


State 12

    8 clase: clase_escalar .

    $default  reduce using rule 8 (clase)


State 13

   10 clase_escalar: tipo .

    $default  reduce using rule 10 (clase_escalar)


State 14

    9 clase: clase_vector .

    $default  reduce using rule 9 (clase)


State 15

   13 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  shift, and go to state 21


State 16

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 . funciones escritura3 sentencias '}'

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 17 (funciones)

    funciones       go to state 23
    funcion         go to state 24
    fn_declaration  go to state 25
    fn_name         go to state 26


State 17

    6 declaraciones: declaracion declaraciones .

    $default  reduce using rule 6 (declaraciones)


State 18

   82 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 82 (identificador)


State 19

    7 declaracion: clase identificadores . ';'

    ';'  shift, and go to state 27


State 20

   14 identificadores: identificador .
   15                | identificador . ',' identificadores

    ','  shift, and go to state 28

    $default  reduce using rule 14 (identificadores)


State 21

   13 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 29


State 22

   20 fn_name: TOK_FUNCTION . tipo TOK_IDENTIFICADOR

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 30


State 23

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 funciones . escritura3 sentencias '}'

    $default  reduce using rule 4 (escritura3)

    escritura3  go to state 31


State 24

   16 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 22

    $default  reduce using rule 17 (funciones)

    funciones       go to state 32
    funcion         go to state 24
    fn_declaration  go to state 25
    fn_name         go to state 26


State 25

   18 funcion: fn_declaration . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    sentencias            go to state 39
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 26

   19 fn_declaration: fn_name . '(' parametros_funcion ')' '{' declaraciones_funcion

    '('  shift, and go to state 55


State 27

    7 declaracion: clase identificadores ';' .

    $default  reduce using rule 7 (declaracion)


State 28

   15 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 18

    identificadores  go to state 56
    identificador    go to state 20


State 29

   13 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  shift, and go to state 57


State 30

   20 fn_name: TOK_FUNCTION tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 58


State 31

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 funciones escritura3 . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    sentencias            go to state 59
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 32

   16 funciones: funcion funciones .

    $default  reduce using rule 16 (funciones)


State 33

   39 asignacion: TOK_IDENTIFICADOR . '=' exp
   41 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'

    '['  shift, and go to state 60
    '='  shift, and go to state 61


State 34

   52 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 70
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 35

   50 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 74


State 36

   51 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 75
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 37

   45 if_exp: TOK_IF . '(' exp ')' '{'

    '('  shift, and go to state 76


State 38

   49 while: TOK_WHILE .

    $default  reduce using rule 49 (while)


State 39

   18 funcion: fn_declaration sentencias . '}'

    '}'  shift, and go to state 77


State 40

   29 sentencias: sentencia .
   30           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    $default  reduce using rule 29 (sentencias)

    sentencias            go to state 78
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 41

   31 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 79


State 42

   32 sentencia: bloque .

    $default  reduce using rule 32 (sentencia)


State 43

   33 sentencia_simple: asignacion .

    $default  reduce using rule 33 (sentencia_simple)


State 44

   40 asignacion: elemento_vector . '=' exp

    '='  shift, and go to state 80


State 45

   37 bloque: condicional .

    $default  reduce using rule 37 (bloque)


State 46

   42 condicional: if_exp_sentencias .
   43            | if_exp_sentencias . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 81

    $default  reduce using rule 42 (condicional)


State 47

   44 if_exp_sentencias: if_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    sentencias            go to state 82
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 48

   38 bloque: bucle .

    $default  reduce using rule 38 (bloque)


State 49

   46 bucle: while_exp_sentencias .

    $default  reduce using rule 46 (bucle)


State 50

   47 while_exp_sentencias: while_exp . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    sentencias            go to state 83
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 51

   48 while_exp: while . '(' exp ')' '{'

    '('  shift, and go to state 84


State 52

   34 sentencia_simple: lectura .

    $default  reduce using rule 34 (sentencia_simple)


State 53

   35 sentencia_simple: escritura .

    $default  reduce using rule 35 (sentencia_simple)


State 54

   36 sentencia_simple: retorno_funcion .

    $default  reduce using rule 36 (sentencia_simple)


State 55

   19 fn_declaration: fn_name '(' . parametros_funcion ')' '{' declaraciones_funcion

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 22 (parametros_funcion)

    tipo                go to state 85
    parametros_funcion  go to state 86
    parametro_funcion   go to state 87


State 56

   15 identificadores: identificador ',' identificadores .

    $default  reduce using rule 15 (identificadores)


State 57

   13 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 13 (clase_vector)


State 58

   20 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 20 (fn_name)


State 59

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 funciones escritura3 sentencias . '}'

    '}'  shift, and go to state 88


State 60

   41 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 89
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 61

   39 asignacion: TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 90
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 62

   41 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   61 exp: TOK_IDENTIFICADOR .
   66    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '['  shift, and go to state 60
    '('  shift, and go to state 91

    $default  reduce using rule 61 (exp)


State 63

   81 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 81 (constante_entera)


State 64

   79 constante_logica: TOK_TRUE .

    $default  reduce using rule 79 (constante_logica)


State 65

   80 constante_logica: TOK_FALSE .

    $default  reduce using rule 80 (constante_logica)


State 66

   57 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 92
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 67

   60 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 93
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 68

   63 exp: '(' . exp ')'
   64    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 94
    comparacion       go to state 95
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 69

   65 exp: elemento_vector .

    $default  reduce using rule 65 (exp)


State 70

   52 retorno_funcion: TOK_RETURN exp .
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 52 (retorno_funcion)


State 71

   62 exp: constante .

    $default  reduce using rule 62 (exp)


State 72

   77 constante: constante_logica .

    $default  reduce using rule 77 (constante)


State 73

   78 constante: constante_entera .

    $default  reduce using rule 78 (constante)


State 74

   50 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce using rule 50 (lectura)


State 75

   51 escritura: TOK_PRINTF exp .
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 51 (escritura)


State 76

   45 if_exp: TOK_IF '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 102
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 77

   18 funcion: fn_declaration sentencias '}' .

    $default  reduce using rule 18 (funcion)


State 78

   30 sentencias: sentencia sentencias .

    $default  reduce using rule 30 (sentencias)


State 79

   31 sentencia: sentencia_simple ';' .

    $default  reduce using rule 31 (sentencia)


State 80

   40 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 103
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 81

   43 condicional: if_exp_sentencias TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 104


State 82

   44 if_exp_sentencias: if_exp sentencias . '}'

    '}'  shift, and go to state 105


State 83

   47 while_exp_sentencias: while_exp sentencias . '}'

    '}'  shift, and go to state 106


State 84

   48 while_exp: while '(' . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 107
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 85

   25 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  shift, and go to state 108

    idpf  go to state 109


State 86

   19 fn_declaration: fn_name '(' parametros_funcion . ')' '{' declaraciones_funcion

    ')'  shift, and go to state 110


State 87

   21 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 111

    $default  reduce using rule 24 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 112


State 88

    1 programa: TOK_MAIN '{' escritura1 declaraciones escritura2 funciones escritura3 sentencias '}' .

    $default  reduce using rule 1 (programa)


State 89

   41 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ']'      shift, and go to state 113


State 90

   39 asignacion: TOK_IDENTIFICADOR '=' exp .
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 39 (asignacion)


State 91

   66 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    $default  reduce using rule 68 (lista_expresiones)

    elemento_vector    go to state 69
    exp                go to state 114
    lista_expresiones  go to state 115
    constante          go to state 71
    constante_logica   go to state 72
    constante_entera   go to state 73


State 92

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   57    | '-' exp .
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97

    $default  reduce using rule 57 (exp)


State 93

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   60    | '!' exp .

    $default  reduce using rule 60 (exp)


State 94

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   63    | '(' exp . ')'
   71 comparacion: exp . TOK_IGUAL exp
   72            | exp . TOK_DISTINTO exp
   73            | exp . TOK_MENORIGUAL exp
   74            | exp . TOK_MAYORIGUAL exp
   75            | exp . '<' exp
   76            | exp . '>' exp

    TOK_OR          shift, and go to state 96
    TOK_AND         shift, and go to state 97
    TOK_DISTINTO    shift, and go to state 116
    TOK_IGUAL       shift, and go to state 117
    TOK_MENORIGUAL  shift, and go to state 118
    TOK_MAYORIGUAL  shift, and go to state 119
    '+'             shift, and go to state 98
    '-'             shift, and go to state 99
    '*'             shift, and go to state 100
    '/'             shift, and go to state 101
    '<'             shift, and go to state 120
    '>'             shift, and go to state 121
    ')'             shift, and go to state 122


State 95

   64 exp: '(' comparacion . ')'

    ')'  shift, and go to state 123


State 96

   59 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 124
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 97

   58 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 125
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 98

   53 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 126
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 99

   54 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 127
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 100

   56 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 128
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 101

   55 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 129
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 102

   45 if_exp: TOK_IF '(' exp . ')' '{'
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ')'      shift, and go to state 130


State 103

   40 asignacion: elemento_vector '=' exp .
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 40 (asignacion)


State 104

   43 condicional: if_exp_sentencias TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_SCANF          shift, and go to state 35
    TOK_PRINTF         shift, and go to state 36
    TOK_IF             shift, and go to state 37
    TOK_WHILE          shift, and go to state 38

    sentencias            go to state 131
    sentencia             go to state 40
    sentencia_simple      go to state 41
    bloque                go to state 42
    asignacion            go to state 43
    elemento_vector       go to state 44
    condicional           go to state 45
    if_exp_sentencias     go to state 46
    if_exp                go to state 47
    bucle                 go to state 48
    while_exp_sentencias  go to state 49
    while_exp             go to state 50
    while                 go to state 51
    lectura               go to state 52
    escritura             go to state 53
    retorno_funcion       go to state 54


State 105

   44 if_exp_sentencias: if_exp sentencias '}' .

    $default  reduce using rule 44 (if_exp_sentencias)


State 106

   47 while_exp_sentencias: while_exp sentencias '}' .

    $default  reduce using rule 47 (while_exp_sentencias)


State 107

   48 while_exp: while '(' exp . ')' '{'
   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ')'      shift, and go to state 132


State 108

   26 idpf: TOK_IDENTIFICADOR .

    $default  reduce using rule 26 (idpf)


State 109

   25 parametro_funcion: tipo idpf .

    $default  reduce using rule 25 (parametro_funcion)


State 110

   19 fn_declaration: fn_name '(' parametros_funcion ')' . '{' declaraciones_funcion

    '{'  shift, and go to state 133


State 111

   23 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo               go to state 85
    parametro_funcion  go to state 134


State 112

   21 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 21 (parametros_funcion)


State 113

   41 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 41 (elemento_vector)


State 114

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   67 lista_expresiones: exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ','      shift, and go to state 135

    $default  reduce using rule 70 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 136


State 115

   66 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 137


State 116

   72 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 138
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 117

   71 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 139
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 118

   73 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 140
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 119

   74 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 141
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 120

   75 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 142
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 121

   76 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 143
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 122

   63 exp: '(' exp ')' .

    $default  reduce using rule 63 (exp)


State 123

   64 exp: '(' comparacion ')' .

    $default  reduce using rule 64 (exp)


State 124

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   59    | exp TOK_OR exp .

    $default  reduce using rule 59 (exp)


State 125

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   58    | exp TOK_AND exp .
   59    | exp . TOK_OR exp

    $default  reduce using rule 58 (exp)


State 126

   53 exp: exp . '+' exp
   53    | exp '+' exp .
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97

    $default  reduce using rule 53 (exp)


State 127

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   54    | exp '-' exp .
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97

    $default  reduce using rule 54 (exp)


State 128

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   56    | exp '*' exp .
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97

    $default  reduce using rule 56 (exp)


State 129

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   55    | exp '/' exp .
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97

    $default  reduce using rule 55 (exp)


State 130

   45 if_exp: TOK_IF '(' exp ')' . '{'

    '{'  shift, and go to state 144


State 131

   43 condicional: if_exp_sentencias TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 145


State 132

   48 while_exp: while '(' exp ')' . '{'

    '{'  shift, and go to state 146


State 133

   19 fn_declaration: fn_name '(' parametros_funcion ')' '{' . declaraciones_funcion

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 28 (declaraciones_funcion)

    declaraciones          go to state 147
    declaracion            go to state 10
    clase                  go to state 11
    clase_escalar          go to state 12
    tipo                   go to state 13
    clase_vector           go to state 14
    declaraciones_funcion  go to state 148


State 134

   23 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 111

    $default  reduce using rule 24 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 149


State 135

   69 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 62
    TOK_CONSTANTE_ENTERA  shift, and go to state 63
    TOK_TRUE              shift, and go to state 64
    TOK_FALSE             shift, and go to state 65
    '-'                   shift, and go to state 66
    '!'                   shift, and go to state 67
    '('                   shift, and go to state 68

    elemento_vector   go to state 69
    exp               go to state 150
    constante         go to state 71
    constante_logica  go to state 72
    constante_entera  go to state 73


State 136

   67 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 67 (lista_expresiones)


State 137

   66 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 66 (exp)


State 138

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   72 comparacion: exp TOK_DISTINTO exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 72 (comparacion)


State 139

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   71 comparacion: exp TOK_IGUAL exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 71 (comparacion)


State 140

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   73 comparacion: exp TOK_MENORIGUAL exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 73 (comparacion)


State 141

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   74 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 74 (comparacion)


State 142

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   75 comparacion: exp '<' exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 75 (comparacion)


State 143

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   76 comparacion: exp '>' exp .

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101

    $default  reduce using rule 76 (comparacion)


State 144

   45 if_exp: TOK_IF '(' exp ')' '{' .

    $default  reduce using rule 45 (if_exp)


State 145

   43 condicional: if_exp_sentencias TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 43 (condicional)


State 146

   48 while_exp: while '(' exp ')' '{' .

    $default  reduce using rule 48 (while_exp)


State 147

   27 declaraciones_funcion: declaraciones .

    $default  reduce using rule 27 (declaraciones_funcion)


State 148

   19 fn_declaration: fn_name '(' parametros_funcion ')' '{' declaraciones_funcion .

    $default  reduce using rule 19 (fn_declaration)


State 149

   23 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 23 (resto_parametros_funcion)


State 150

   53 exp: exp . '+' exp
   54    | exp . '-' exp
   55    | exp . '/' exp
   56    | exp . '*' exp
   58    | exp . TOK_AND exp
   59    | exp . TOK_OR exp
   69 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_OR   shift, and go to state 96
    TOK_AND  shift, and go to state 97
    '+'      shift, and go to state 98
    '-'      shift, and go to state 99
    '*'      shift, and go to state 100
    '/'      shift, and go to state 101
    ','      shift, and go to state 135

    $default  reduce using rule 70 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 151


State 151

   69 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 69 (resto_lista_expresiones)

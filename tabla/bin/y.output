Terminals unused in grammar

   TOK_CONSTANTE_REAL
   TOK_ERROR


Grammar

    0 $accept: programa $end

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias '}'

    2 escritura1: %empty

    3 escritura2: %empty

    4 declaraciones: declaracion
    5              | declaracion declaraciones

    6 declaracion: clase identificadores ';'

    7 clase: clase_escalar
    8      | clase_vector

    9 clase_escalar: tipo

   10 tipo: TOK_INT
   11     | TOK_BOOLEAN

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   13 identificadores: identificador
   14                | identificador ',' identificadores

   15 funciones: funcion funciones
   16          | %empty

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   18 parametros_funcion: parametro_funcion resto_parametros_funcion
   19                   | %empty

   20 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   21                         | %empty

   22 parametro_funcion: tipo TOK_IDENTIFICADOR

   23 declaraciones_funcion: declaraciones
   24                      | %empty

   25 sentencias: sentencia
   26           | sentencia sentencias

   27 sentencia: sentencia_simple ';'
   28          | bloque

   29 sentencia_simple: asignacion
   30                 | lectura
   31                 | escritura
   32                 | retorno_funcion

   33 bloque: condicional
   34       | bucle

   35 asignacion: TOK_IDENTIFICADOR '=' exp
   36           | elemento_vector '=' exp

   37 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   38 condicional: TOK_IF '(' exp ')' '{' sentencias '}'
   39            | TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

   40 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'

   41 lectura: TOK_SCANF TOK_IDENTIFICADOR

   42 escritura: TOK_PRINTF exp

   43 retorno_funcion: TOK_RETURN exp

   44 exp: exp '+' exp
   45    | exp '-' exp
   46    | exp '/' exp
   47    | exp '*' exp
   48    | '-' exp
   49    | exp TOK_AND exp
   50    | exp TOK_OR exp
   51    | '!' exp
   52    | TOK_IDENTIFICADOR
   53    | constante
   54    | '(' exp ')'
   55    | comparacion
   56    | elemento_vector
   57    | TOK_IDENTIFICADOR '(' lista_expresiones ')'

   58 lista_expresiones: exp resto_lista_expresiones
   59                  | %empty

   60 resto_lista_expresiones: ',' exp resto_lista_expresiones
   61                        | %empty

   62 comparacion: exp TOK_IGUAL exp
   63            | exp TOK_DISTINTO exp
   64            | exp TOK_MENORIGUAL exp
   65            | exp TOK_MAYORIGUAL exp
   66            | exp '<' exp
   67            | exp '>' exp

   68 constante: constante_logica
   69          | constante_entera

   70 constante_logica: TOK_TRUE
   71                 | TOK_FALSE

   72 constante_entera: TOK_CONSTANTE_ENTERA

   73 identificador: TOK_IDENTIFICADOR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 51
'(' (40) 17 38 39 40 54 57
')' (41) 17 38 39 40 54 57
'*' (42) 47
'+' (43) 44
',' (44) 14 60
'-' (45) 45 48
'/' (47) 46
';' (59) 6 20 27
'<' (60) 66
'=' (61) 35 36
'>' (62) 67
'[' (91) 12 37
']' (93) 12 37
'{' (123) 1 17 38 39 40
'}' (125) 1 17 38 39 40
error (256)
TOK_IDENTIFICADOR (258) 22 35 37 41 52 57 73
TOK_CONSTANTE_REAL (259)
TOK_CONSTANTE_ENTERA (260) 12 72
TOK_MAIN (261) 1
TOK_RETURN (262) 43
TOK_ARRAY (263) 12
TOK_INT (264) 10
TOK_BOOLEAN (265) 11
TOK_SCANF (266) 41
TOK_PRINTF (267) 42
TOK_IF (268) 38 39
TOK_ELSE (269) 39
TOK_WHILE (270) 40
TOK_OR (271) 50
TOK_AND (272) 49
TOK_DISTINTO (273) 63
TOK_IGUAL (274) 62
TOK_MENORIGUAL (275) 64
TOK_MAYORIGUAL (276) 65
TOK_FUNCTION (277) 17
TOK_TRUE (278) 70
TOK_FALSE (279) 71
TOK_ERROR (280)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
programa (43)
    on left: 1, on right: 0
escritura1 (44)
    on left: 2, on right: 1
escritura2 (45)
    on left: 3, on right: 1
declaraciones (46)
    on left: 4 5, on right: 1 5 23
declaracion (47)
    on left: 6, on right: 4 5
clase (48)
    on left: 7 8, on right: 6
clase_escalar (49)
    on left: 9, on right: 7
tipo (50)
    on left: 10 11, on right: 9 12 17 22
clase_vector (51)
    on left: 12, on right: 8
identificadores (52)
    on left: 13 14, on right: 6 14
funciones (53)
    on left: 15 16, on right: 1 15
funcion (54)
    on left: 17, on right: 15
parametros_funcion (55)
    on left: 18 19, on right: 17
resto_parametros_funcion (56)
    on left: 20 21, on right: 18 20
parametro_funcion (57)
    on left: 22, on right: 18 20
declaraciones_funcion (58)
    on left: 23 24, on right: 17
sentencias (59)
    on left: 25 26, on right: 1 17 26 38 39 40
sentencia (60)
    on left: 27 28, on right: 25 26
sentencia_simple (61)
    on left: 29 30 31 32, on right: 27
bloque (62)
    on left: 33 34, on right: 28
asignacion (63)
    on left: 35 36, on right: 29
elemento_vector (64)
    on left: 37, on right: 36 56
condicional (65)
    on left: 38 39, on right: 33
bucle (66)
    on left: 40, on right: 34
lectura (67)
    on left: 41, on right: 30
escritura (68)
    on left: 42, on right: 31
retorno_funcion (69)
    on left: 43, on right: 32
exp (70)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57, on right: 35
    36 37 38 39 40 42 43 44 45 46 47 48 49 50 51 54 58 60 62 63 64
    65 66 67
lista_expresiones (71)
    on left: 58 59, on right: 57
resto_lista_expresiones (72)
    on left: 60 61, on right: 58 60
comparacion (73)
    on left: 62 63 64 65 66 67, on right: 55
constante (74)
    on left: 68 69, on right: 53
constante_logica (75)
    on left: 70 71, on right: 68
constante_entera (76)
    on left: 72, on right: 69
identificador (77)
    on left: 73, on right: 13 14 17


State 0

    0 $accept: . programa $end

    TOK_MAIN  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: TOK_MAIN . '{' escritura1 declaraciones funciones escritura2 sentencias '}'

    '{'  shift, and go to state 3


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 4


State 3

    1 programa: TOK_MAIN '{' . escritura1 declaraciones funciones escritura2 sentencias '}'

    $default  reduce using rule 2 (escritura1)

    escritura1  go to state 5


State 4

    0 $accept: programa $end .

    $default  accept


State 5

    1 programa: TOK_MAIN '{' escritura1 . declaraciones funciones escritura2 sentencias '}'

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    declaraciones  go to state 9
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 6

   12 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 15


State 7

   10 tipo: TOK_INT .

    $default  reduce using rule 10 (tipo)


State 8

   11 tipo: TOK_BOOLEAN .

    $default  reduce using rule 11 (tipo)


State 9

    1 programa: TOK_MAIN '{' escritura1 declaraciones . funciones escritura2 sentencias '}'

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 16 (funciones)

    funciones  go to state 17
    funcion    go to state 18


State 10

    4 declaraciones: declaracion .
    5              | declaracion . declaraciones

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 4 (declaraciones)

    declaraciones  go to state 19
    declaracion    go to state 10
    clase          go to state 11
    clase_escalar  go to state 12
    tipo           go to state 13
    clase_vector   go to state 14


State 11

    6 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 20

    identificadores  go to state 21
    identificador    go to state 22


State 12

    7 clase: clase_escalar .

    $default  reduce using rule 7 (clase)


State 13

    9 clase_escalar: tipo .

    $default  reduce using rule 9 (clase_escalar)


State 14

    8 clase: clase_vector .

    $default  reduce using rule 8 (clase)


State 15

   12 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  shift, and go to state 23


State 16

   17 funcion: TOK_FUNCTION . tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo  go to state 24


State 17

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones . escritura2 sentencias '}'

    $default  reduce using rule 3 (escritura2)

    escritura2  go to state 25


State 18

   15 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 16

    $default  reduce using rule 16 (funciones)

    funciones  go to state 26
    funcion    go to state 18


State 19

    5 declaraciones: declaracion declaraciones .

    $default  reduce using rule 5 (declaraciones)


State 20

   73 identificador: TOK_IDENTIFICADOR .

    $default  reduce using rule 73 (identificador)


State 21

    6 declaracion: clase identificadores . ';'

    ';'  shift, and go to state 27


State 22

   13 identificadores: identificador .
   14                | identificador . ',' identificadores

    ','  shift, and go to state 28

    $default  reduce using rule 13 (identificadores)


State 23

   12 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 29


State 24

   17 funcion: TOK_FUNCTION tipo . identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 20

    identificador  go to state 30


State 25

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    sentencias        go to state 37
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 26

   15 funciones: funcion funciones .

    $default  reduce using rule 15 (funciones)


State 27

    6 declaracion: clase identificadores ';' .

    $default  reduce using rule 6 (declaracion)


State 28

   14 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 20

    identificadores  go to state 48
    identificador    go to state 22


State 29

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  shift, and go to state 49


State 30

   17 funcion: TOK_FUNCTION tipo identificador . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  shift, and go to state 50


State 31

   35 asignacion: TOK_IDENTIFICADOR . '=' exp
   37 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'

    '['  shift, and go to state 51
    '='  shift, and go to state 52


State 32

   43 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 61
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 33

   41 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 66


State 34

   42 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 67
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 35

   38 condicional: TOK_IF . '(' exp ')' '{' sentencias '}'
   39            | TOK_IF . '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '('  shift, and go to state 68


State 36

   40 bucle: TOK_WHILE . '(' exp ')' '{' sentencias '}'

    '('  shift, and go to state 69


State 37

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias . '}'

    '}'  shift, and go to state 70


State 38

   25 sentencias: sentencia .
   26           | sentencia . sentencias

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    $default  reduce using rule 25 (sentencias)

    sentencias        go to state 71
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 39

   27 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 72


State 40

   28 sentencia: bloque .

    $default  reduce using rule 28 (sentencia)


State 41

   29 sentencia_simple: asignacion .

    $default  reduce using rule 29 (sentencia_simple)


State 42

   36 asignacion: elemento_vector . '=' exp

    '='  shift, and go to state 73


State 43

   33 bloque: condicional .

    $default  reduce using rule 33 (bloque)


State 44

   34 bloque: bucle .

    $default  reduce using rule 34 (bloque)


State 45

   30 sentencia_simple: lectura .

    $default  reduce using rule 30 (sentencia_simple)


State 46

   31 sentencia_simple: escritura .

    $default  reduce using rule 31 (sentencia_simple)


State 47

   32 sentencia_simple: retorno_funcion .

    $default  reduce using rule 32 (sentencia_simple)


State 48

   14 identificadores: identificador ',' identificadores .

    $default  reduce using rule 14 (identificadores)


State 49

   12 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 12 (clase_vector)


State 50

   17 funcion: TOK_FUNCTION tipo identificador '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 19 (parametros_funcion)

    tipo                go to state 74
    parametros_funcion  go to state 75
    parametro_funcion   go to state 76


State 51

   37 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 77
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 52

   35 asignacion: TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 78
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 53

   37 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   52 exp: TOK_IDENTIFICADOR .
   57    | TOK_IDENTIFICADOR . '(' lista_expresiones ')'

    '['  shift, and go to state 51
    '('  shift, and go to state 79

    $default  reduce using rule 52 (exp)


State 54

   72 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 72 (constante_entera)


State 55

   70 constante_logica: TOK_TRUE .

    $default  reduce using rule 70 (constante_logica)


State 56

   71 constante_logica: TOK_FALSE .

    $default  reduce using rule 71 (constante_logica)


State 57

   48 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 80
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 58

   51 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 81
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 59

   54 exp: '(' . exp ')'

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 82
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 60

   56 exp: elemento_vector .

    $default  reduce using rule 56 (exp)


State 61

   43 retorno_funcion: TOK_RETURN exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 43 (retorno_funcion)


State 62

   55 exp: comparacion .

    $default  reduce using rule 55 (exp)


State 63

   53 exp: constante .

    $default  reduce using rule 53 (exp)


State 64

   68 constante: constante_logica .

    $default  reduce using rule 68 (constante)


State 65

   69 constante: constante_entera .

    $default  reduce using rule 69 (constante)


State 66

   41 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce using rule 41 (lectura)


State 67

   42 escritura: TOK_PRINTF exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 42 (escritura)


State 68

   38 condicional: TOK_IF '(' . exp ')' '{' sentencias '}'
   39            | TOK_IF '(' . exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 95
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 69

   40 bucle: TOK_WHILE '(' . exp ')' '{' sentencias '}'

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 96
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 70

    1 programa: TOK_MAIN '{' escritura1 declaraciones funciones escritura2 sentencias '}' .

    $default  reduce using rule 1 (programa)


State 71

   26 sentencias: sentencia sentencias .

    $default  reduce using rule 26 (sentencias)


State 72

   27 sentencia: sentencia_simple ';' .

    $default  reduce using rule 27 (sentencia)


State 73

   36 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 97
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 74

   22 parametro_funcion: tipo . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 98


State 75

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  shift, and go to state 99


State 76

   18 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 100

    $default  reduce using rule 21 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 101


State 77

   37 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ']'             shift, and go to state 102


State 78

   35 asignacion: TOK_IDENTIFICADOR '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 35 (asignacion)


State 79

   57 exp: TOK_IDENTIFICADOR '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    $default  reduce using rule 59 (lista_expresiones)

    elemento_vector    go to state 60
    exp                go to state 103
    lista_expresiones  go to state 104
    comparacion        go to state 62
    constante          go to state 63
    constante_logica   go to state 64
    constante_entera   go to state 65


State 80

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   48    | '-' exp .
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 48 (exp)


State 81

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   51    | '!' exp .
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    $default  reduce using rule 51 (exp)


State 82

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   54    | '(' exp . ')'
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ')'             shift, and go to state 105


State 83

   50 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 106
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 84

   49 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 107
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 85

   63 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 108
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 86

   62 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 109
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 87

   64 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 110
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 88

   65 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 111
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 89

   44 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 112
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 90

   45 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 113
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 91

   47 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 114
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 92

   46 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 115
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 93

   66 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 116
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 94

   67 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 117
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 95

   38 condicional: TOK_IF '(' exp . ')' '{' sentencias '}'
   39            | TOK_IF '(' exp . ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ')'             shift, and go to state 118


State 96

   40 bucle: TOK_WHILE '(' exp . ')' '{' sentencias '}'
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ')'             shift, and go to state 119


State 97

   36 asignacion: elemento_vector '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 36 (asignacion)


State 98

   22 parametro_funcion: tipo TOK_IDENTIFICADOR .

    $default  reduce using rule 22 (parametro_funcion)


State 99

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  shift, and go to state 120


State 100

   20 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    tipo               go to state 74
    parametro_funcion  go to state 121


State 101

   18 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 18 (parametros_funcion)


State 102

   37 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 37 (elemento_vector)


State 103

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   58 lista_expresiones: exp . resto_lista_expresiones
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ','             shift, and go to state 122

    $default  reduce using rule 61 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 123


State 104

   57 exp: TOK_IDENTIFICADOR '(' lista_expresiones . ')'

    ')'  shift, and go to state 124


State 105

   54 exp: '(' exp ')' .

    $default  reduce using rule 54 (exp)


State 106

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   50    | exp TOK_OR exp .
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 50 (exp)


State 107

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   49    | exp TOK_AND exp .
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 49 (exp)


State 108

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   63            | exp TOK_DISTINTO exp .
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 63 (comparacion)


State 109

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   62            | exp TOK_IGUAL exp .
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 62 (comparacion)


State 110

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   64            | exp TOK_MENORIGUAL exp .
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    $default  reduce using rule 64 (comparacion)


State 111

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   65            | exp TOK_MAYORIGUAL exp .
   66            | exp . '<' exp
   67            | exp . '>' exp

    $default  reduce using rule 65 (comparacion)


State 112

   44 exp: exp . '+' exp
   44    | exp '+' exp .
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 44 (exp)


State 113

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   45    | exp '-' exp .
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 45 (exp)


State 114

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   47    | exp '*' exp .
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 47 (exp)


State 115

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   46    | exp '/' exp .
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94

    $default  reduce using rule 46 (exp)


State 116

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   66            | exp '<' exp .
   67            | exp . '>' exp

    $default  reduce using rule 66 (comparacion)


State 117

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp
   67            | exp '>' exp .

    $default  reduce using rule 67 (comparacion)


State 118

   38 condicional: TOK_IF '(' exp ')' . '{' sentencias '}'
   39            | TOK_IF '(' exp ')' . '{' sentencias '}' TOK_ELSE '{' sentencias '}'

    '{'  shift, and go to state 125


State 119

   40 bucle: TOK_WHILE '(' exp ')' . '{' sentencias '}'

    '{'  shift, and go to state 126


State 120

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_ARRAY    shift, and go to state 6
    TOK_INT      shift, and go to state 7
    TOK_BOOLEAN  shift, and go to state 8

    $default  reduce using rule 24 (declaraciones_funcion)

    declaraciones          go to state 127
    declaracion            go to state 10
    clase                  go to state 11
    clase_escalar          go to state 12
    tipo                   go to state 13
    clase_vector           go to state 14
    declaraciones_funcion  go to state 128


State 121

   20 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 100

    $default  reduce using rule 21 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 129


State 122

   60 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 53
    TOK_CONSTANTE_ENTERA  shift, and go to state 54
    TOK_TRUE              shift, and go to state 55
    TOK_FALSE             shift, and go to state 56
    '-'                   shift, and go to state 57
    '!'                   shift, and go to state 58
    '('                   shift, and go to state 59

    elemento_vector   go to state 60
    exp               go to state 130
    comparacion       go to state 62
    constante         go to state 63
    constante_logica  go to state 64
    constante_entera  go to state 65


State 123

   58 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 58 (lista_expresiones)


State 124

   57 exp: TOK_IDENTIFICADOR '(' lista_expresiones ')' .

    $default  reduce using rule 57 (exp)


State 125

   38 condicional: TOK_IF '(' exp ')' '{' . sentencias '}'
   39            | TOK_IF '(' exp ')' '{' . sentencias '}' TOK_ELSE '{' sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    sentencias        go to state 131
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 126

   40 bucle: TOK_WHILE '(' exp ')' '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    sentencias        go to state 132
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 127

   23 declaraciones_funcion: declaraciones .

    $default  reduce using rule 23 (declaraciones_funcion)


State 128

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    sentencias        go to state 133
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 129

   20 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 20 (resto_parametros_funcion)


State 130

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '/' exp
   47    | exp . '*' exp
   49    | exp . TOK_AND exp
   50    | exp . TOK_OR exp
   60 resto_lista_expresiones: ',' exp . resto_lista_expresiones
   62 comparacion: exp . TOK_IGUAL exp
   63            | exp . TOK_DISTINTO exp
   64            | exp . TOK_MENORIGUAL exp
   65            | exp . TOK_MAYORIGUAL exp
   66            | exp . '<' exp
   67            | exp . '>' exp

    TOK_OR          shift, and go to state 83
    TOK_AND         shift, and go to state 84
    TOK_DISTINTO    shift, and go to state 85
    TOK_IGUAL       shift, and go to state 86
    TOK_MENORIGUAL  shift, and go to state 87
    TOK_MAYORIGUAL  shift, and go to state 88
    '+'             shift, and go to state 89
    '-'             shift, and go to state 90
    '*'             shift, and go to state 91
    '/'             shift, and go to state 92
    '<'             shift, and go to state 93
    '>'             shift, and go to state 94
    ','             shift, and go to state 122

    $default  reduce using rule 61 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 134


State 131

   38 condicional: TOK_IF '(' exp ')' '{' sentencias . '}'
   39            | TOK_IF '(' exp ')' '{' sentencias . '}' TOK_ELSE '{' sentencias '}'

    '}'  shift, and go to state 135


State 132

   40 bucle: TOK_WHILE '(' exp ')' '{' sentencias . '}'

    '}'  shift, and go to state 136


State 133

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  shift, and go to state 137


State 134

   60 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 60 (resto_lista_expresiones)


State 135

   38 condicional: TOK_IF '(' exp ')' '{' sentencias '}' .
   39            | TOK_IF '(' exp ')' '{' sentencias '}' . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 138

    $default  reduce using rule 38 (condicional)


State 136

   40 bucle: TOK_WHILE '(' exp ')' '{' sentencias '}' .

    $default  reduce using rule 40 (bucle)


State 137

   17 funcion: TOK_FUNCTION tipo identificador '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce using rule 17 (funcion)


State 138

   39 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 139


State 139

   39 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' . sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 31
    TOK_RETURN         shift, and go to state 32
    TOK_SCANF          shift, and go to state 33
    TOK_PRINTF         shift, and go to state 34
    TOK_IF             shift, and go to state 35
    TOK_WHILE          shift, and go to state 36

    sentencias        go to state 140
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    elemento_vector   go to state 42
    condicional       go to state 43
    bucle             go to state 44
    lectura           go to state 45
    escritura         go to state 46
    retorno_funcion   go to state 47


State 140

   39 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 141


State 141

   39 condicional: TOK_IF '(' exp ')' '{' sentencias '}' TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 39 (condicional)
